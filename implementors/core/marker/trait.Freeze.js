(function() {var implementors = {};
implementors["mincodec"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"mincodec/enum.OptionWriteError.html\" title=\"enum mincodec::OptionWriteError\">OptionWriteError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["mincodec::OptionWriteError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"mincodec/enum.OptionReadError.html\" title=\"enum mincodec::OptionReadError\">OptionReadError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["mincodec::OptionReadError"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"enum\" href=\"mincodec/enum.ResultWriteError.html\" title=\"enum mincodec::ResultWriteError\">ResultWriteError</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["mincodec::ResultWriteError"]},{"text":"impl&lt;T, E&gt; Freeze for <a class=\"enum\" href=\"mincodec/enum.ResultReadError.html\" title=\"enum mincodec::ResultReadError\">ResultReadError</a>&lt;T, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["mincodec::ResultReadError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"mincodec/enum.StringReadError.html\" title=\"enum mincodec::StringReadError\">StringReadError</a>","synthetic":true,"types":["mincodec::_alloc::StringReadError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"mincodec/enum.VecWriteError.html\" title=\"enum mincodec::VecWriteError\">VecWriteError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["mincodec::_alloc::VecWriteError"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"mincodec/enum.VecReadError.html\" title=\"enum mincodec::VecReadError\">VecReadError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["mincodec::_alloc::VecReadError"]}];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()